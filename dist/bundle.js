'use strict';(function(a){function b(d){if(c[d])return c[d].exports;var e=c[d]={i:d,l:!1,exports:{}};return a[d].call(e.exports,e,e.exports,b),e.l=!0,e.exports}var c={};return b.m=a,b.c=c,b.d=function(a,c,d){b.o(a,c)||Object.defineProperty(a,c,{configurable:!1,enumerable:!0,get:d})},b.n=function(a){var c=a&&a.__esModule?function(){return a['default']}:function(){return a};return b.d(c,'a',c),c},b.o=function(a,b){return Object.prototype.hasOwnProperty.call(a,b)},b.p='',b(b.s=0)})([function(a,b,c){'use strict';function d(a){l.update(a);var b=l.dis.vector,c=l.vel,d=l.vel.vector;0>b[0]&&(b[0]=0,c.set([-d[0],d[1]]),c.set.scale(0.95)),b[0]>window.innerWidth-100&&(b[0]=window.innerWidth-100,c.set([-d[0],d[1]]),c.set.scale(0.95)),0>b[1]&&(b[1]=0,c.set([d[0],-d[1]]),c.set.scale(0.95)),b[1]>window.innerHeight-100&&(b[1]=window.innerHeight-100,c.set([d[0],-d[1]]),c.set.scale(0.95))}function e(){k.style.transform='translate('+l.dis.vector[0]+'px, '+l.dis.vector[1]+'px)'}function f(){q=Date.now();var a=q-p;d(a/1e3),e(),p=q,window.requestAnimationFrame(f)}function g(a){l.dis.set([a.pageX-50,a.pageY-50])}Object.defineProperty(b,'__esModule',{value:!0});var h=c(1),i=document,j=i.body,k=document.createElement('div');k.className='ball',k.style.width=100,k.style.height=100,j.appendChild(k);var l=Object(h.a)();{var m=l.acc,n=l.vel,o=l.dis;m.set([0,100]),n.set([1500,1500]),o.set([window.innerWidth/2-50,window.innerHeight/2-50])}var p=Date.now(),q=Date.now();f(),k.addEventListener('mousedown',function(){j.addEventListener('mousemove',g)}),j.addEventListener('mouseup',function(){j.removeEventListener('mousemove',g)}),window.ball=l},function(a,b,c){'use strict';b.a=function(){var a=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{},b={acc:Object(d.a)([0,0])};return b.vel=Object(d.a)([0,0],b.acc),b.dis=Object(d.a)([0,0],b.vel),b.update=function(a){var b=this.vel,c=this.dis;b.set.add(b.der.scale(a)),c.set.add(c.der.scale(a))},Object.create(b,a)};var d=c(2)},function(a,b){'use strict';b.a=function(a,b){var c={vector:a,der:b,set:function(a){return this.vector=a},scale:function(a){return this.vector.map(function(b){return b*a})},add:function(a){return this.vector.map(function(b,c){return b+a[c]})}};return['scale','add'].forEach(function(a){c.set[a]=function(){return c.set(c[a].apply(c,arguments))}}),c}}]);